name: Deploy to Cloudflare

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      NEXT_TELEMETRY_DISABLED: '1'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Cache Next.js build
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      
      - name: Install dependencies
        run: npm install
      
      - name: Build Next.js app
        run: npm run build
      
      - name: Build for Cloudflare
        run: npm run cf:build
      
      - name: Verify environment
        run: |
          echo "Checking Cloudflare credentials..."
          if [ -z "$CLOUDFLARE_API_TOKEN" ]; then
            echo "ERROR: CLOUDFLARE_API_TOKEN is not set"
            exit 1
          fi
          if [ -z "$CLOUDFLARE_ACCOUNT_ID" ]; then
            echo "ERROR: CLOUDFLARE_ACCOUNT_ID is not set"
            exit 1
          fi
          echo "Credentials are set âœ“"
          echo "Account ID: ${CLOUDFLARE_ACCOUNT_ID:0:8}..."
      
      - name: Deploy to Cloudflare
        run: |
          echo "Deploying to Cloudflare Pages..."
          echo "Project name: chongo-mhbbnj5uiqoj"
          echo "Account ID: ${CLOUDFLARE_ACCOUNT_ID:0:8}..."
          CLOUDFLARE_API_TOKEN="$CLOUDFLARE_API_TOKEN" CLOUDFLARE_ACCOUNT_ID="$CLOUDFLARE_ACCOUNT_ID" npx wrangler deploy --name chongo-mhbbnj5uiqoj --compatibility-date=2025-10-28
